---
import Alert from "../components/Alert.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
const pageTitle = "login";
import axios from "axios";
---

<BaseLayout pageTitle={pageTitle}>
  <div class="main">
    <form id="form" method="post">
      <input
        type="text"
        name="credentail"
        placeholder="Email or Username"
        required
      />
      <input type="password" name="password" placeholder="Password" required />
      <button type="submit">Login</button>
    </form>
  </div>
  <Alert id="login-alert" />
</BaseLayout>

<script>
  import axios from "axios";
  import { setCookie } from "../utils/cookiesHandler.ts";
  import { API_URL } from "../utils/apiHandler.ts";
  const form = document.getElementById("form") as HTMLFormElement;
  import {
    setupAlertClose,
    showAlert,
    closeAlert,
  } from "../utils/alertHandler";

  document.addEventListener("DOMContentLoaded", async () => {
    setupAlertClose("login-alert");
    showAlert("Please login with email or username", "info", "login-alert");
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      showAlert(
        "Please wait processing your credentials...",
        "info",
        "login-alert"
      );

      const formData = new FormData(form);

      const credentail = formData.get("credentail");
      const password = formData.get("password");

      const email = credentail.toString().includes("@")
        ? credentail.toString()
        : "";

      const username = !credentail.toString().includes("@")
        ? credentail.toString()
        : "";

      try {
        const res = await axios.post(API_URL + "/user/login", {
          email,
          username,
          password,
        });

        if (res.status == 200) {
          setCookie("accessToken", res.data.token, {
            expires: new Date(Date.now() + res.data.expires),
          });
          setCookie("userId", res.data.user._id, {
            expires: new Date(Date.now() + res.data.expires),
          });

          setTimeout(() => {
            closeAlert("login-alert");
            window.location.href = "/";
          }, 2000);
        }
      } catch (error) {
        closeAlert("login-alert");
        if (error?.response?.status == 404 || 401) {
          showAlert(
            "wrong credentials,please try again",
            "error",
            "login-alert"
          );
        } else {
          showAlert(
            "something went wrong while login you in, please try again",
            "error",
            "login-alert"
          );
        }
        form.reset();
      }
    });
  });
</script>

<style>
  .main {
    height: 60vh;
    display: flex;
    justify-content: center;
    flex-direction: row;
    gap: 20px;
    align-items: center;
  }
  form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }
  input,
  textarea {
    padding: 1rem;
    border: 1px solid #2a2241;
    border-radius: 8px;
    background-color: #161026;
    color: #bdbdbd;
    width: 20rem;
  }
  button {
    margin-top: 2rem;
  }
</style>
